{"version": 2, "width": 112, "height": 63, "timestamp": 1575653739, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}, "title": "Athenz Bootstrap Demo"}
[0.022183, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[0.022928, "o", "\u001b[?1034h[wfan@garm docker]$ "]
[0.736303, "o", "\r\n"]
[0.736523, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007[wfan@garm docker]$ sh \"`gi"]
[0.736563, "o", "t re"]
[0.736625, "o", "v-"]
[0.736657, "o", "parse"]
[0.736674, "o", " -"]
[0.736705, "o", "-s"]
[0.736748, "o", "how"]
[0.73677, "o", "-t"]
[0.73679, "o", "o"]
[0.736806, "o", "p"]
[0.736839, "o", "l"]
[0.736856, "o", "e"]
[0.736878, "o", "ve"]
[0.736894, "o", "l"]
[0.736908, "o", "`"]
[0.73702, "o", "/docke"]
[0.737056, "o", "r/"]
[0.737109, "o", "do"]
[0.737156, "o", "cs/c"]
[0.737199, "o", "a"]
[0.737215, "o", "s"]
[0.737232, "o", "t"]
[0.737247, "o", "/"]
[0.737347, "o", "boots"]
[0.73738, "o", "t"]
[0.737397, "o", "r"]
[0.737413, "o", "a"]
[0.737427, "o", "p"]
[0.737478, "o", "-d"]
[0.737501, "o", "e"]
[0.737517, "o", "m"]
[0.737555, "o", "o"]
[0.737576, "o", "-"]
[0.737592, "o", "w"]
[0.737607, "o", "e"]
[0.737705, "o", "lcom"]
[0.737738, "o", "e"]
[0.737755, "o", "-"]
[0.737805, "o", "sc"]
[0.737842, "o", "r"]
[0.737859, "o", "i"]
[0.737895, "o", "p"]
[0.737917, "o", "t"]
[0.73802, "o", ".sh\"\r\n"]
[0.746569, "o", "\u001b[34m"]
[0.747361, "o", "Hello~\r\n"]
[0.748489, "o", "\u001b(B\u001b[m"]
[0.752419, "o", "\u001b[34m"]
[0.753213, "o", "Welcome to the 'Athenz Bootstrap Demo' üòÑ\r\n"]
[0.754173, "o", "\u001b(B\u001b[m"]
[2.259543, "o", "\u001b[34m"]
[2.260363, "o", "In this demo, we will use self-signed certificates for the setup.\r\n"]
[2.261436, "o", "\u001b(B\u001b[m"]
[3.762854, "o", "\r\n"]
[3.766802, "o", "\u001b[34m"]
[3.76779, "o", "P.S. do not use self-signed certificates in your production env !!!"]
[3.767934, "o", "\r\n"]
[3.775917, "o", "\u001b(B\u001b[m"]
[5.281478, "o", "\u001b[34m"]
[5.28234, "o", "You should request all the certificates from your trusted CAs and put them in the pre-specified paths.\r\n"]
[5.283383, "o", "\u001b(B\u001b[m"]
[6.788705, "o", "\u001b[34m"]
[6.789531, "o", "Please read through all the documents to ensure your Athenz deployment can reach your security requirement.\r\n"]
[6.790529, "o", "\u001b(B\u001b[m"]
[8.292101, "o", "\r\n"]
[8.295975, "o", "\u001b[34m"]
[8.296833, "o", "The starting point is [Athenz-bootstrap.md]\r\n"]
[8.297845, "o", "\u001b(B\u001b[m"]
[9.803264, "o", "\u001b[34m"]
[9.804067, "o", "It is also the starting point of this demo.\r\n"]
[9.80508, "o", "\u001b(B\u001b[m"]
[11.306634, "o", "\r\n"]
[11.310524, "o", "\u001b[34m"]
[11.311378, "o", "So, let's start üí™üèª\r\n"]
[11.312384, "o", "\u001b(B\u001b[m"]
[12.813941, "o", "\r\n"]
[12.817769, "o", "\u001b[34m"]
[12.818609, "o", "First, confirm the prerequisites\r\n"]
[12.819606, "o", "\u001b(B\u001b[m"]
[14.325105, "o", "\u001b[31m"]
[14.325917, "o", "$ which keytool\r\n"]
[14.326949, "o", "\u001b(B\u001b[m"]
[14.331105, "o", "\u001b[33m"]
[14.331945, "o", "/bin/keytool\r\n"]
[14.332963, "o", "\u001b(B\u001b[m"]
[14.336751, "o", "\u001b[31m"]
[14.337657, "o", "$ openssl version\r\n"]
[14.338646, "o", "\u001b(B\u001b[m"]
[14.342359, "o", "\u001b[33m"]
[14.343277, "o", "OpenSSL 1.0.2k-fips  26 Jan 2017\r\n"]
[14.344342, "o", "\u001b(B\u001b[m"]
[14.348073, "o", "\u001b[31m"]
[14.348932, "o", "$ docker -v\r\n"]
[14.349908, "o", "\u001b(B\u001b[m"]
[14.353578, "o", "\u001b[33m"]
[14.424009, "o", "Docker version "]
[14.424202, "o", "19.03.5, build 633a0ea\r\n"]
[14.428443, "o", "\u001b(B\u001b[m"]
[15.929835, "o", "\r\n"]
[15.933648, "o", "\u001b[34m"]
[15.934549, "o", "Check out the docker, nothing is running now üò≠\r\n"]
[15.935552, "o", "\u001b(B\u001b[m"]
[15.939313, "o", "\u001b[31m"]
[15.940125, "o", "$ docker ps -a\r\n"]
[15.94118, "o", "\u001b(B\u001b[m"]
[15.944914, "o", "\u001b[33m"]
[16.021598, "o", "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES"]
[16.021953, "o", "\r\n"]
[16.026202, "o", "\u001b(B\u001b[m"]
[17.527626, "o", "\r\n"]
[17.531489, "o", "\u001b[34m"]
[17.532591, "o", "Done checking, time to go to the athenz repo\r\n"]
[17.533633, "o", "\u001b(B\u001b[m"]
[17.537477, "o", "\u001b[31m"]
[17.53829, "o", "$ cd ~/athenz"]
[17.538404, "o", "\r\n"]
[17.539551, "o", "\u001b(B\u001b[m"]
[19.040949, "o", "\r\n"]
[19.044804, "o", "\u001b[34m"]
[19.045714, "o", "We are going run the automation shortcut, sit back and enjoy~ üèñ"]
[19.045838, "o", "\r\n"]
[19.04691, "o", "\u001b(B\u001b[m"]
[19.047384, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[19.047587, "o", "[wfan@garm docker]$ \r\n\u001b]0;wfan@garm:~/athenz/docker\u0007[wfan@garm docker]$ BA"]
[19.047784, "o", "SE_DIR=\"`git rev-p"]
[19.047885, "o", "arse --"]
[19.048053, "o", "show-toplev"]
[19.048132, "o", "el`\"\r\n"]
[19.049927, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[19.050018, "o", "[wfan@garm docker]$ SETU"]
[19.050097, "o", "P_DIR=\"$"]
[19.050162, "o", "{BASE_"]
[19.05024, "o", "DIR}"]
[19.050305, "o", "/dock"]
[19.050364, "o", "er/s"]
[19.050423, "o", "etup"]
[19.050488, "o", "-scr"]
[19.050552, "o", "ipts"]
[19.050611, "o", "\"\r\n"]
[19.050691, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[19.050745, "o", "[wfan@garm docker]$ \r\n"]
[19.050835, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[19.050927, "o", "[wfan@garm docker]$ sh \"${"]
[19.050997, "o", "SETUP_"]
[19.051063, "o", "DIR}/s"]
[19.05112, "o", "elf-"]
[19.051183, "o", "sign"]
[19.051247, "o", "ed-ce"]
[19.051306, "o", "rtif"]
[19.051365, "o", "ica"]
[19.05143, "o", "tes."]
[19.051488, "o", "sh\"\r\n"]
[19.058569, "o", "\u001b[36m"]
[19.059558, "o", "\r\n#################################################\r\n### try-out-Athenz-with-self-signed-CA.md\r\n#################################################\r\n\r\n"]
[19.060557, "o", "\u001b(B\u001b[m"]
[19.061027, "o", "\r\n"]
[19.064801, "o", "\u001b[31m"]
[19.065843, "o", "# Prepare certificates\r\n"]
[19.066875, "o", "\u001b(B\u001b[m"]
[19.070581, "o", "\u001b[32m"]
[19.071391, "o", "1. set up env.\r\n"]
[19.072554, "o", "\u001b(B\u001b[m"]
[19.094836, "o", "\u001b[32m"]
[19.095764, "o", "2. create the self-signed CAs\r\n"]
[19.096731, "o", "\u001b(B\u001b[m"]
[19.099736, "o", "running...\r\n"]
[28.916651, "o", "\r\nself-signed CAs created.\r\n  athenz_ca: /home/wfan/athenz/docker/sample/CAs/athenz_ca.pem\r\n  key: /home/wfan/athenz/docker/sample/CAs/athenz_ca.pem\r\n\r\n  user_ca: /home/wfan/athenz/docker/sample/CAs/user_ca.pem\r\n  key: /home/wfan/athenz/docker/sample/CAs/user_ca.pem\r\n\r\n  service_ca: /home/wfan/athenz/docker/sample/CAs/service_ca.pem\r\n  key: /home/wfan/athenz/docker/sample/CAs/service_ca.pem\r\n\r\n"]
[28.92074, "o", "\u001b[32m"]
[28.921735, "o", "3. create self-signed Athenz domain admin user certificate"]
[28.921879, "o", "\r\n"]
[28.922951, "o", "\u001b(B\u001b[m"]
[28.926909, "o", "\u001b[33m"]
[28.927835, "o", "your setting: DEV_DOMAIN_ADMIN=user.github-7654321"]
[28.927954, "o", "\r\n"]
[28.929044, "o", "\u001b(B\u001b[m"]
[28.93215, "o", "running...\r\n"]
[29.990008, "o", "Signature ok\r\nsubject=/C=US/O=Athenz/CN=user.github-7654321\r\n"]
[29.990419, "o", "Getting CA Private Key\r\n"]
[30.018497, "o", "\r\nself-signed Athenz domain admin user certificate created.\r\n  ca: /home/wfan/athenz/docker/sample/CAs/user_ca.pem\r\n  key: /home/wfan/athenz/docker/sample/domain-admin/domain_admin_key.pem\r\n  cert: /home/wfan/athenz/docker/sample/domain-admin/domain_admin_cert.pem\r\n"]
[30.018593, "o", "\r\n"]
[30.022599, "o", "\u001b[32m"]
[30.023503, "o", "4. create ZMS server certificate\r\n"]
[30.024517, "o", "\u001b(B\u001b[m"]
[30.027601, "o", "running...\r\n"]
[30.126465, "o", "Signature ok\r\nsubject=/C=US/O=Athenz/CN=Sample Self Signed ZMS\r\n"]
[30.126838, "o", "Getting CA Private Key\r\n"]
[30.157368, "o", "\r\nself-signed ZMS server certificate created.\r\n  ca: /home/wfan/athenz/docker/sample/CAs/athenz_ca.pem\r\n  key: /home/wfan/athenz/docker/sample/zms/zms_key.pem\r\n  cert: /home/wfan/athenz/docker/sample/zms/zms_cert.pem\r\n\r\n"]
[30.161188, "o", "\u001b[32m"]
[30.161978, "o", "5. create ZTS server certificates\r\n"]
[30.163013, "o", "\u001b(B\u001b[m"]
[30.166199, "o", "running...\r\n"]
[31.975644, "o", "Signature ok"]
[31.975859, "o", "\r\n"]
[31.975976, "o", "subject="]
[31.976093, "o", "/C=US/O=Athenz/CN=Sample Self Signed ZTS"]
[31.976221, "o", "\r\n"]
[31.976631, "o", "Getting CA Private Key"]
[31.976745, "o", "\r\n"]
[34.399799, "o", "Signature ok"]
[34.400181, "o", "\r\n"]
[34.400379, "o", "subject="]
[34.400573, "o", "/C=US/O=Athenz/CN=Sample Self Signed Intermediate CA"]
[34.400762, "o", "\r\n"]
[34.401287, "o", "Getting CA Private Key"]
[34.401472, "o", "\r\n"]
[35.613387, "o", "Signature ok\r\nsubject=/C=US/O=Athenz/CN=sys.auth.zts\r\n"]
[35.61378, "o", "Getting CA Private Key\r\n"]
[35.638917, "o", "\r\nself-signed ZTS server certificate created.\r\n  ca: /home/wfan/athenz/docker/prod/CAs/athenz_ca.pem\r\n  key: /home/wfan/athenz/docker/sample/zts/zts_key.pem\r\n  cert: /home/wfan/athenz/docker/sample/zts/zts_cert.pem\r\n\r\nself-signed Intermediate CA certificate created.\r\n  ca: /home/wfan/athenz/docker/prod/CAs/service_ca.pem\r\n  key: /home/wfan/athenz/docker/sample/zts/zts_signer_key.pem\r\n  cert: /home/wfan/athenz/docker/sample/zts/zts_signer_cert.pem"]
[35.639144, "o", "\r\n\r\nself-signed ZTS client certificate created.\r\n  ca: /home/wfan/athenz/docker/sample/zts/zts_signer_cert.pem\r\n  key: /home/wfan/athenz/docker/sample/zts/zms_client_key.pem\r\n  cert: /home/wfan/athenz/docker/sample/zts/zms_client_cert.pem\r\n  cert_bundle: /home/wfan/athenz/docker/sample/zts/zms_client_cert_bundle.pem\r\n\r\n"]
[35.63927, "o", "\r\n"]
[35.643016, "o", "\u001b[31m"]
[35.643847, "o", "# Overwrite env."]
[35.643974, "o", "\r\n"]
[35.64514, "o", "\u001b(B\u001b[m"]
[35.650548, "o", "\u001b[35m"]
[35.651354, "o", "As shell script cannot update the env. in parent shell X_X\r\n"]
[35.652333, "o", "\u001b(B\u001b[m"]
[35.656149, "o", "\u001b[35m"]
[35.657117, "o", "You will need to run the following command...\r\n"]
[35.658108, "o", "\u001b(B\u001b[m"]
[35.658886, "o", "source /home/wfan/athenz/docker/setup-scripts/dev-env-exports.sh"]
[35.659051, "o", "\r\n"]
[35.662786, "o", "\u001b[35m"]
[35.663765, "o", "Or, if you run the auto script, we will do that for you XD\r\n"]
[35.664773, "o", "\u001b(B\u001b[m"]
[35.665228, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[35.665379, "o", "[wfan@garm docker]$ \r\n\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[35.66552, "o", "[wfan@garm docker]$ sh \"${SET"]
[35.665654, "o", "UP_DIR}/zms"]
[35.665727, "o", "-auto-"]
[35.665799, "o", "confi"]
[35.66597, "o", "g.sh\"\r\n"]
[35.672719, "o", "\u001b[36m"]
[35.673652, "o", "\r\n#################################################\r\n### zms-setup.md\r\n#################################################\r\n\r\n"]
[35.674655, "o", "\u001b(B\u001b[m"]
[35.696234, "o", "\u001b[35m"]
[35.697029, "o", "Be careful! You are using the DEV settings in dev-env-exports.sh !!!\r\n"]
[35.698004, "o", "\u001b(B\u001b[m"]
[35.698477, "o", "\r\n"]
[35.702201, "o", "\u001b[31m"]
[35.703229, "o", "# Steps\r\n"]
[35.704217, "o", "\u001b(B\u001b[m"]
[35.707968, "o", "\u001b[32m"]
[35.708785, "o", "1. update your passwords"]
[35.70893, "o", "\r\n"]
[35.71004, "o", "\u001b(B\u001b[m"]
[35.713973, "o", "\u001b[33m"]
[35.714854, "o", "We will just use the default  Ö(¬¥‚óî‡±™‚óî) É"]
[35.714975, "o", "\r\n"]
[35.716096, "o", "\u001b(B\u001b[m"]
[35.719848, "o", "\u001b[32m"]
[35.720666, "o", "2. get a server certificate for ZMS\r\n"]
[35.721668, "o", "\u001b(B\u001b[m"]
[35.725569, "o", "\u001b[33m"]
[35.726494, "o", "/home/wfan/athenz/docker/sample/zms/zms_key.pem\r\n"]
[35.727485, "o", "\u001b(B\u001b[m"]
[35.731288, "o", "\u001b[33m"]
[35.732123, "o", "/home/wfan/athenz/docker/sample/zms/zms_cert.pem\r\n"]
[35.733205, "o", "\u001b(B\u001b[m"]
[35.736914, "o", "\u001b[32m"]
[35.73772, "o", "3. create ZMS key pairs for signing Athenz token\r\n"]
[35.738721, "o", "\u001b(B\u001b[m"]
[37.908683, "o", "writing RSA key\r\n"]
[37.915794, "o", "\u001b[32m"]
[37.916645, "o", "4. create ZMS trust store for HTTPS connections\r\n"]
[37.917737, "o", "\u001b(B\u001b[m"]
[38.199939, "o", "Certificate was added to keystore\r\n"]
[38.478074, "o", "Certificate was added to keystore\r\n"]
[38.757887, "o", "Certificate was added to keystore\r\n"]
[38.766273, "o", "\u001b[32m"]
[38.767247, "o", "5. create ZMS key store with ZMS server certificate\r\n"]
[38.768232, "o", "\u001b(B\u001b[m"]
[38.781393, "o", "\u001b[32m"]
[38.782276, "o", "6. config the Athenz domain admin"]
[38.782477, "o", "\r\n"]
[38.783637, "o", "\u001b(B\u001b[m"]
[38.78741, "o", "\u001b[33m"]
[38.788374, "o", "your setting: DOMAIN_ADMIN=user.github-7654321"]
[38.788493, "o", "\r\n"]
[38.789613, "o", "\u001b(B\u001b[m"]
[38.797415, "o", "\u001b[32m"]
[38.798371, "o", "7. summary\r\n"]
[38.799337, "o", "\u001b(B\u001b[m"]
[38.800569, "o", "/home/wfan/athenz/docker/sample/CAs\r\n‚îú‚îÄ‚îÄ athenz_ca.pem\r\n"]
[38.800643, "o", "‚îú‚îÄ‚îÄ athenz_ca.srl\r\n‚îú‚îÄ‚îÄ create-self-signed-ca.sh\r\n‚îú‚îÄ‚îÄ service_ca.pem\r\n‚îú‚îÄ‚îÄ service_ca.srl\r\n‚îú‚îÄ‚îÄ user_ca.pem\r\n"]
[38.800911, "o", "‚îî‚îÄ‚îÄ user_ca.srl\r\n\r\n0 directories, 7 files\r\n"]
[38.801983, "o", "/home/wfan/athenz/docker/sample/zms\r\n"]
[38.802052, "o", "‚îú‚îÄ‚îÄ create-self-signed-certs.sh\r\n‚îú‚îÄ‚îÄ dev_x509_cert.cnf\r\n‚îú‚îÄ‚îÄ zms_cert.pem\r\n‚îú‚îÄ‚îÄ zms_csr.pem\r\n‚îî‚îÄ‚îÄ zms_key.pem"]
[38.802278, "o", "\r\n\r\n0 directories, 5 files\r\n"]
[38.803406, "o", "/home/wfan/athenz/docker/zms\r\n"]
[38.803579, "o", "‚îú‚îÄ‚îÄ conf\r\n‚îÇ¬†¬† ‚îú‚îÄ‚îÄ athenz.properties\r\n‚îÇ¬†¬† ‚îú‚îÄ‚îÄ authorized_services.json\r\n‚îÇ¬†¬† ‚îú‚îÄ‚îÄ logback.xml\r\n‚îÇ¬†¬† ‚îú‚îÄ‚îÄ solution_templates.json\r\n‚îÇ¬†¬† ‚îî‚îÄ‚îÄ zms.properties\r\n‚îú‚îÄ‚îÄ Dockerfile\r\n"]
[38.80375, "o", "‚îî‚îÄ‚îÄ var\r\n    ‚îú‚îÄ‚îÄ certs\r\n    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ zms_keystore.pkcs12\r\n    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ zms_truststore.jks\r\n    ‚îî‚îÄ‚îÄ keys\r\n        ‚îú‚îÄ‚îÄ zms_private.pem\r\n        ‚îî‚îÄ‚îÄ zms_public.pem\r\n\r\n4 directories, 10 files\r\n"]
[38.80394, "o", "\r\n"]
[38.807455, "o", "\u001b[31m"]
[38.808433, "o", "# Get Athenz domain admin user certificate for accessing ZMS\r\n"]
[38.809391, "o", "\u001b(B\u001b[m"]
[38.813257, "o", "\u001b[33m"]
[38.814235, "o", "/home/wfan/athenz/docker/sample/domain-admin/domain_admin_key.pem"]
[38.814355, "o", "\r\n"]
[38.815469, "o", "\u001b(B\u001b[m"]
[38.819289, "o", "\u001b[33m"]
[38.82026, "o", "/home/wfan/athenz/docker/sample/domain-admin/domain_admin_cert.pem"]
[38.820379, "o", "\r\n"]
[38.821473, "o", "\u001b(B\u001b[m"]
[38.821832, "o", "\r\n"]
[38.825385, "o", "\u001b[31m"]
[38.826344, "o", "# Deploy ZMS"]
[38.826454, "o", "\r\n"]
[38.827513, "o", "\u001b(B\u001b[m"]
[39.069042, "o", "4771d7983daa1c5080c7b55bb5bee887045c05e190c8b6a46d07185f27bde4a2\r\n"]
[39.072827, "o", "\r\nWill start ZMS DB...\r\n"]
[39.184902, "o", "0fa464f3a3fe1679a3aa508c0379dada9bab165276b9bf50c4e751c7428a52db\r\n"]
[40.503128, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[43.507916, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[46.514054, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[49.520338, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[52.535473, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[55.540612, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[58.548999, "o", "mysqld is alive\r\nMySQL is up!\r\n"]
[58.760736, "o", "\r\nWill add zms_admin user to DB and remove root user with wildcard host...\r\n"]
[59.608827, "o", "User\tHost\r\nzms_admin\tathenz-zms-server.athenz\r\nroot\tlocalhost\r\n"]
[59.680272, "o", "\r\nWill start ZMS server...\r\n"]
[59.828706, "o", "fee67ebeddbc0094513124f12fd6d111923ba79060e06c864b8e58528177fd21\r\n"]
[60.486356, "o", "\r\nWill wait for ZMS to be ready...\r\n"]
[61.659697, "o", "ZMS is unavailable - will sleep 3s...\r\n"]
[65.919188, "o", "ZMS is unavailable - will sleep 3s...\r\n"]
[70.714392, "o", "ZMS is up!\r\n"]
[70.718933, "o", "\u001b[32m"]
[70.719775, "o", "Debug ZMS\r\n"]
[70.720862, "o", "\u001b(B\u001b[m"]
[70.726156, "o", "\u001b[37m"]
[70.744604, "o", "17:36:46.634 [main] DEBUG c.y.a.zms.store.jdbc.JDBCConnection - getDomainId: com.mysql.cj.jdbc.ClientPreparedStatement: SELECT domain_id FROM domain WHERE name='sys.auth';\r\n17:36:46.635 [main] DEBUG c.y.a.zms.store.jdbc.JDBCConnection - getServiceId: com.mysql.cj.jdbc.ClientPreparedStatement: SELECT service_id FROM service WHERE domain_id=3 AND name='zms';\r\n17:36:46.636 [main] DEBUG c.y.a.zms.store.jdbc.JDBCConnection - listPublicKeys: com.mysql.cj.jdbc.ClientPreparedStatement: SELECT * FROM public_key WHERE service_id=1;\r\n17:36:46.647 [main] DEBUG c.y.a.zms.store.jdbc.JDBCConnection - listServiceHosts: com.mysql.cj.jdbc.ClientPreparedStatement: SELECT host.name FROM host JOIN service_host ON service_host.host_id=host.host_id WHERE service_host.service_id=1;\r\n17:36:47.689 [main] INFO  o.e.j.server.handler.ContextHandler - Started o.e.j.w.WebAppContext@52aa2946{zms,/zms,file:///tmp/jetty-0_0_0_0-4443-zms_war-_zms-any-3966328519617462518.dir/webapp/,AVAILABLE}{/opt/athenz/zms/webapps/zms.war}\r\n17:36:47.770 [mai"]
[70.745082, "o", "n] INFO  o.e.j.util.ssl.SslContextFactory - x509=X509@3491e86e(1,h=[localhost, athenz-zms-server],w=[]) for Server@19b047fe[provider=null,keyStore=file:///opt/athenz/zms/var/certs/zms_keystore.pkcs12,trustStore=file:///opt/athenz/zms/var/certs/zms_truststore.jks]\r\n17:36:47.873 [main] INFO  o.e.jetty.server.AbstractConnector - Started ServerConnector@3712b94{SSL,[ssl, http/1.1]}{0.0.0.0:4443}\r\n17:36:47.873 [main] INFO  org.eclipse.jetty.server.Server - Started @8176ms\r\n17:36:49.591 [qtp2094411587-16] DEBUG c.y.a.a.o.CertificateJwtAccessTokenAuthority - CertificateJwtAccessTokenAuthority:authenticate: invalid certificate: No certificate available in request\r\n17:36:49.592 [qtp2094411587-16] ERROR c.y.athenz.common.server.rest.Http - authenticate: :error: CertificateJwtAccessTokenAuthority:authenticate: invalid certificate: No certificate available in request\r\n"]
[70.745939, "o", "\u001b(B\u001b[m"]
[70.750087, "o", "\u001b[33m"]
[70.751003, "o", "add ZMS host\r\n"]
[70.756145, "o", "\u001b(B\u001b[m"]
[70.760656, "o", "\u001b[37m"]
[70.761517, "o", "127.0.0.1 athenz-zms-server\r\n/etc/hosts already set\r\n"]
[70.762609, "o", "\u001b(B\u001b[m"]
[70.766963, "o", "\u001b[33m"]
[70.767882, "o", "ZMS health check\r\n"]
[70.768911, "o", "\u001b(B\u001b[m"]
[70.772841, "o", "\u001b[37m"]
[70.777782, "o", "*"]
[70.778101, "o", " "]
[70.77844, "o", "About to connect() to athenz-zms-server port 4443 (#0)"]
[70.7787, "o", "\r\n"]
[70.779011, "o", "*"]
[70.779289, "o", " "]
[70.77955, "o", "  Trying 127.0.0.1..."]
[70.779803, "o", "\r\n"]
[70.780225, "o", "*"]
[70.780479, "o", " "]
[70.78074, "o", "Connected to athenz-zms-server (127.0.0.1) port 4443 (#0)"]
[70.78102, "o", "\r\n"]
[70.781438, "o", ">"]
[70.78171, "o", " "]
[70.781998, "o", "GET /zms/v1/status HTTP/1.1\r"]
[70.782292, "o", "\r\n"]
[70.782624, "o", ">"]
[70.78359, "o", " "]
[70.784376, "o", "User-Agent: curl/7.29.0\r"]
[70.785279, "o", "\r\n"]
[70.785475, "o", ">"]
[70.785661, "o", " "]
[70.785861, "o", "Host: athenz-zms-server:4443\r"]
[70.786046, "o", "\r\n"]
[70.786243, "o", ">"]
[70.786418, "o", " "]
[70.786593, "o", "Accept: */*\r"]
[70.786765, "o", "\r\n"]
[70.786966, "o", ">"]
[70.78714, "o", " "]
[70.787323, "o", "\r"]
[70.787493, "o", "\r\n"]
[70.787687, "o", "{"]
[70.787885, "o", " "]
[70.788059, "o", "["]
[70.788243, "o", "d"]
[70.788419, "o", "a"]
[70.788589, "o", "t"]
[70.788759, "o", "a"]
[70.788953, "o", " "]
[70.789123, "o", "n"]
[70.79545, "o", "o"]
[70.795697, "o", "t"]
[70.795967, "o", " "]
[70.796237, "o", "s"]
[70.796495, "o", "h"]
[70.796762, "o", "o"]
[70.797035, "o", "w"]
[70.797308, "o", "n"]
[70.797567, "o", "]"]
[70.797844, "o", "\r\n"]
[70.798155, "o", "*"]
[70.798439, "o", " "]
[70.798698, "o", "Connection #0 to host athenz-zms-server left intact"]
[70.798975, "o", "\r\n"]
[70.799355, "o", "\u0015\u0003\u0003\u0000\u0002\u0002P"]
[70.800571, "o", "\r\n"]
[70.801908, "o", "\u001b(B\u001b[m"]
[70.805994, "o", "\u001b[33m"]
[70.806839, "o", "get domains"]
[70.80704, "o", "\r\n"]
[70.808276, "o", "\u001b(B\u001b[m"]
[70.812219, "o", "\u001b[37m"]
[71.28567, "o", "{\"names\":[\"sys\",\"sys.auth\",\"sys.auth.audit\",\"sys.auth.audit.domain\",\"sys.auth.audit.org\",\"user\"]}"]
[71.287894, "o", "\r\n"]
[71.296252, "o", "\u001b(B\u001b[m"]
[71.297839, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007[wfan@garm docker]$ \r\n\u001b]0;wfan@garm:~/athenz/docker\u0007[wfan@garm docker]$ sh \"${SETUP_DIR}/zts-auto-config.sh\"\r\n"]
[71.30479, "o", "\u001b[36m"]
[71.305634, "o", "\r\n#################################################\r\n### zts-setup.md\r\n#################################################\r\n\r\n"]
[71.306623, "o", "\u001b(B\u001b[m"]
[71.329154, "o", "\u001b[35m"]
[71.330007, "o", "Be careful! You are using the DEV settings in dev-env-exports.sh !!!\r\n"]
[71.331037, "o", "\u001b(B\u001b[m"]
[71.331382, "o", "\r\n"]
[71.334937, "o", "\u001b[31m"]
[71.335849, "o", "# Steps\r\n"]
[71.33686, "o", "\u001b(B\u001b[m"]
[71.340862, "o", "\u001b[32m"]
[71.341702, "o", "1. update your passwords\r\n"]
[71.342716, "o", "\u001b(B\u001b[m"]
[71.346903, "o", "\u001b[33m"]
[71.347804, "o", "We will just use the default  Ö(¬¥‚óî‡±™‚óî) É"]
[71.348045, "o", "\r\n"]
[71.34931, "o", "\u001b(B\u001b[m"]
[71.353073, "o", "\u001b[32m"]
[71.353901, "o", "2. get a server certificate for ZTS\r\n"]
[71.3549, "o", "\u001b(B\u001b[m"]
[71.359289, "o", "\u001b[33m"]
[71.36045, "o", "/home/wfan/athenz/docker/sample/zts/zts_key.pem\r\n"]
[71.361469, "o", "\u001b(B\u001b[m"]
[71.365367, "o", "\u001b[33m"]
[71.366393, "o", "/home/wfan/athenz/docker/sample/zts/zts_cert.pem\r\n"]
[71.367511, "o", "\u001b(B\u001b[m"]
[71.371592, "o", "\u001b[32m"]
[71.372446, "o", "3. create ZTS key pairs for signing Athenz token\r\n"]
[71.37349, "o", "\u001b(B\u001b[m"]
[73.485583, "o", "writing RSA key\r\n"]
[73.48978, "o", "\u001b[32m"]
[73.490638, "o", "4. create trust store containing all the trusted CAs\r\n"]
[73.491705, "o", "\u001b(B\u001b[m"]
[73.797994, "o", "Certificate was added to keystore"]
[73.798483, "o", "\r\n"]
[74.11668, "o", "Certificate was added to keystore\r\n"]
[74.439969, "o", "Certificate was added to keystore\r\n"]
[74.449944, "o", "\u001b[32m"]
[74.450814, "o", "5. create key store containing the ZTS server certificate\r\n"]
[74.456126, "o", "\u001b(B\u001b[m"]
[74.468455, "o", "\u001b[32m"]
[74.46931, "o", "6. set up for certificate signing\r\n"]
[74.470286, "o", "\u001b(B\u001b[m"]
[74.477638, "o", "\u001b[33m"]
[74.478577, "o", "We will just use KeyStoreCertSigner !!!\r\n"]
[74.479831, "o", "\u001b(B\u001b[m"]
[74.78391, "o", "Certificate was added to keystore\r\n"]
[74.804645, "o", "\u001b[32m"]
[74.805504, "o", "7. set up for ZMS connection\r\n"]
[74.806631, "o", "\u001b(B\u001b[m"]
[75.116608, "o", "Certificate was added to keystore\r\n"]
[75.127223, "o", "\u001b[32m"]
[75.128119, "o", "8. summary"]
[75.128347, "o", "\r\n"]
[75.129593, "o", "\u001b(B\u001b[m"]
[75.130761, "o", "/home/wfan/athenz/docker/sample/CAs\r\n‚îú‚îÄ‚îÄ athenz_ca.pem\r\n‚îú‚îÄ‚îÄ athenz_ca.srl\r\n‚îú‚îÄ‚îÄ create-self-signed-ca.sh\r\n"]
[75.13096, "o", "‚îú‚îÄ‚îÄ service_ca.pem\r\n‚îú‚îÄ‚îÄ service_ca.srl\r\n‚îú‚îÄ‚îÄ user_ca.pem\r\n‚îî‚îÄ‚îÄ user_ca.srl\r\n\r\n0 directories, 7 files\r\n"]
[75.131863, "o", "/home/wfan/athenz/docker/sample/zts\r\n‚îú‚îÄ‚îÄ create-self-signed-certs.sh\r\n"]
[75.131954, "o", "‚îú‚îÄ‚îÄ dev_x509_cert.cnf\r\n‚îú‚îÄ‚îÄ zms_client_cert_bundle.pem\r\n‚îú‚îÄ‚îÄ zms_client_cert.pem\r\n‚îú‚îÄ‚îÄ zms_client_csr.pem\r\n‚îú‚îÄ‚îÄ zms_client_key.pem\r\n‚îú‚îÄ‚îÄ zts_cert.pem\r\n‚îú‚îÄ‚îÄ zts_cert_signer_ca.cnf\r\n‚îú‚îÄ‚îÄ zts_csr.pem\r\n‚îú‚îÄ‚îÄ zts_key.pem\r\n‚îú‚îÄ‚îÄ zts_signer_cert.pem\r\n‚îú‚îÄ‚îÄ zts_signer_cert.srl\r\n‚îú‚îÄ‚îÄ zts_signer_csr.pem\r\n‚îî‚îÄ‚îÄ zts_signer_key.pem\r\n\r\n0 directories, 14 files\r\n"]
[75.132939, "o", "/home/wfan/athenz/docker/zts"]
[75.13314, "o", "\r\n"]
[75.133399, "o", "‚îú‚îÄ‚îÄ conf"]
[75.133585, "o", "\r\n"]
[75.133775, "o", "‚îÇ¬†¬† ‚îú‚îÄ‚îÄ athenz.properties"]
[75.133983, "o", "\r\n‚îÇ¬†¬† ‚îú‚îÄ‚îÄ logback.xml\r\n‚îÇ¬†¬† ‚îî‚îÄ‚îÄ zts.properties\r\n‚îú‚îÄ‚îÄ Dockerfile\r\n"]
[75.134216, "o", "‚îî‚îÄ‚îÄ var\r\n    ‚îú‚îÄ‚îÄ certs\r\n    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ zms_client_keystore.pkcs12\r\n    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ zms_client_truststore.jks\r\n    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ zts_keystore.pkcs12\r\n    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ zts_signer_keystore.pkcs12\r\n    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ zts_signer_truststore.jks\r\n    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ zts_truststore.jks\r\n    ‚îî‚îÄ‚îÄ keys\r\n        ‚îú‚îÄ‚îÄ zts_private.pem\r\n        ‚îî‚îÄ‚îÄ zts_public.pem\r\n\r\n4 directories, 12 files\r\n"]
[75.138843, "o", "\u001b[32m"]
[75.139775, "o", "9. register ZTS service to Athenz\r\n"]
[75.141073, "o", "\u001b(B\u001b[m"]
[75.841954, "o", "{\"name\":\"sys.auth.zts\",\"publicKeys\":[{\"key\":\"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF5OUhhcGlxUGpEMkFhcDBQc1RvegpqZTF6Ym4xU0RnbFFhUG9sc0k0bUpMYWlMNSt4U01nWkNJTDBVSnZYNEI2eFlocm4vSWgzU082RnNXNTdJcStVCk4zTCs3MEJVUXlkQmNoNzVsRVYrQ2JIZHNnTEJtdWxpQU0yc1JUZGJteXR0dHNIN1NkUnVScE81RHV2cktYRWQKaTFlZ0d3OERYOUhvU2xBTUQ3R0M3dGYwWjBnRjk2dkVYVzhCb3Q4bUJKZ3RPUktGNXA2TjNGbXBiSnIxWUYxUQo4L3NsUHh0S05KZjZFSWdsNm9PaVhZYjZaUGkwL1dZdFB6bE9lU1UxMnhXKzc2b2RuQ3E5eWI1YzNHN25RL2VnCjU3b0hZL1VZRXZrdVJCdERHM0o0RXpERjZ5YURnS2xGNzBXUnJJN004MDFDMVVyWEJablNCRFV0YWZ2ZFYwa3IKcU52RktqK1JuU2lOaUtUZUVHbVFidFcvM1hmU2FnVmpuU2JJSVBoNFhnSGMxcC90WlRnMEJqRWNtYnV5a0o3SQpxU0FYUmY5QkJ6WHRVRDlETFFGMEpsdnhnL25aYmZEQVNoUGJyNWdOaWU2NndpZ2Q2RFRuMU5kZ2w5NlNwRFA2CkRUN04rVDMyM2pDZjJiYmFMK0FwMytBMmdlUEVaVWZSRFh2M3djRzRISmZBbnBCNDM5cnNobDREdUlJUTZLR04Ka09pZmxvY0phRjZVZWVNTEpHWTFtNG81Rm80Z05STm1rOHBPeGxsemI2UEhoa2VQYVlCbTR4dnpTNTlnSkk5MQpTVGZ0ZGROcHBSSzJhQkQwUURieWZsSVcxODg0UmVGK1FUMUpaUmFXN2plYS9YeXdOamZWUXMvL3d"]
[75.842054, "o", "udTEyUFplCldLTjdMVjRqSU82Rk9XVHJ4anJ6V2w4Q0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo.\",\"id\":\"0\"}],\"modified\":\"2019-12-06T17:36:54.728Z\"}"]
[75.844985, "o", "\r\n"]
[75.858152, "o", "\u001b[32m"]
[75.85902, "o", "10. create athenz.conf\r\n"]
[75.860427, "o", "\u001b(B\u001b[m"]
[77.118633, "o", "\r\n"]
[77.123621, "o", "\u001b[31m"]
[77.12495, "o", "# Deploy ZTS\r\n"]
[77.125981, "o", "\u001b(B\u001b[m"]
[77.263589, "o", "\r\n"]
[77.264118, "o", "Will start ZTS DB..."]
[77.264617, "o", "\r\n"]
[77.409667, "o", "76c2a4e24564d154ef1feb3bd2e7759e2778be2650a84e025a478ba4d347f7f7\r\n"]
[78.921239, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[81.928005, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[84.940868, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[87.948399, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[90.954757, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[93.963411, "o", "MySQL is unavailable - will sleep 3s...\r\n"]
[96.97166, "o", "mysqld is alive\r\n"]
[96.971727, "o", "MySQL is up!\r\n"]
[97.193676, "o", "\r\nWill add zts_admin user to DB and remove root user with wildcard host...\r\n"]
[97.989479, "o", "User"]
[97.98986, "o", "\t"]
[97.990221, "o", "Host"]
[97.990528, "o", "\r\n"]
[97.990851, "o", "zts_admin"]
[97.991167, "o", "\t"]
[97.991494, "o", "athenz-zts-server"]
[97.991812, "o", "\r\n"]
[97.992131, "o", "root"]
[97.992382, "o", "\t"]
[97.992598, "o", "localhost"]
[97.99285, "o", "\r\n"]
[98.0623, "o", "\r\nWill start ZTS server...\r\n"]
[98.189442, "o", "25b18bc9c4a5fb17b669fdd71dd89732f04321ef55d46a789caded2cc9b5b954\r\n"]
[98.764789, "o", "\r\n"]
[98.765399, "o", "Will wait for ZTS to be ready...\r\n"]
[99.941812, "o", "ZTS is unavailable - will sleep 3s...\r\n"]
[104.081151, "o", "ZTS is unavailable - will sleep 3s...\r\n"]
[108.202071, "o", "ZTS is unavailable - will sleep 3s...\r\n"]
[112.539863, "o", "ZTS is up!\r\n"]
[112.544472, "o", "\u001b[32m"]
[112.545346, "o", "Debug ZTS\r\n"]
[112.546475, "o", "\u001b(B\u001b[m"]
[112.550725, "o", "\u001b[37m"]
[112.566401, "o", "17:37:26.375 [pool-3-thread-1] INFO  c.y.a.zts.cert.InstanceCertManager - ExpiredX509CertRecordCleaner: Starting expired cert record cleaner thread...\r\n17:37:27.087 [pool-3-thread-1] ERROR c.y.a.z.c.impl.JDBCCertRecordStore - getConnection: Access denied for user 'zts_admin'@'athenz-zts-server.athenz' (using password: YES)\r\n17:37:27.088 [pool-3-thread-1] ERROR c.y.a.zts.cert.InstanceCertManager - ExpiredX509CertRecordCleaner: unable to cleanup expired cert records: ResourceException (503): Access denied for user 'zts_admin'@'athenz-zts-server.athenz' (using password: YES)\r\n17:37:27.088 [pool-3-thread-1] INFO  c.y.a.zts.cert.InstanceCertManager - ExpiredX509CertRecordCleaner: Completed cleanup of 0 expired cert records\r\n17:37:27.290 [main] INFO  o.e.j.server.handler.ContextHandler - Started o.e.j.w.WebAppContext@52aa2946{zts,/zts,file:///tmp/jetty-0_0_0_0-8443-zts_war-_zts-any-9026016660955265350.dir/webapp/,AVAILABLE}{/opt/athenz/zts/webapps/zts.war}\r\n17:37:27.311 [main] INFO  o.e.j.util.ssl.SslContextFactory"]
[112.56694, "o", " - x509=X509@2eaef76d(1,h=[localhost, athenz-zts-server],w=[]) for Server@118102ee[provider=null,keyStore=file:///opt/athenz/zts/var/certs/zts_keystore.pkcs12,trustStore=file:///opt/athenz/zts/var/certs/zts_truststore.jks]\r\n17:37:27.333 [main] INFO  o.e.jetty.server.AbstractConnector - Started ServerConnector@3712b94{SSL,[ssl, http/1.1]}{0.0.0.0:8443}\r\n17:37:27.333 [main] INFO  org.eclipse.jetty.server.Server - Started @9359ms\r\n17:37:31.527 [qtp2094411587-15] DEBUG c.y.a.a.o.CertificateJwtAccessTokenAuthority - CertificateJwtAccessTokenAuthority:authenticate: invalid certificate: No certificate available in request\r\n17:37:31.528 [qtp2094411587-15] ERROR c.y.athenz.common.server.rest.Http - authenticate: :error: CertificateJwtAccessTokenAuthority:authenticate: invalid certificate: No certificate available in request\r\n"]
[112.567534, "o", "\u001b(B\u001b[m"]
[112.571419, "o", "\u001b[33m"]
[112.575585, "o", "add ZTS host\r\n"]
[112.57666, "o", "\u001b(B\u001b[m"]
[112.580677, "o", "\u001b[37m"]
[112.581562, "o", "127.0.0.1 athenz-zts-server\r\n/etc/hosts already set\r\n"]
[112.582604, "o", "\u001b(B\u001b[m"]
[112.586738, "o", "\u001b[33m"]
[112.58787, "o", "ZTS health check\r\n"]
[112.588842, "o", "\u001b(B\u001b[m"]
[112.593108, "o", "\u001b[37m"]
[112.59817, "o", "* About to connect() to athenz-zts-server port 8443 (#0)\r\n"]
[112.598467, "o", "*   Trying 127.0.0.1...\r\n* Connected to athenz-zts-server (127.0.0.1) port 8443 (#0)\r\n> GET /zts/v1/status HTTP/1.1\r\r\n> User-Agent: curl/7.29.0\r\r\n> Host: athenz-zts-server:8443\r\r\n> Accept: */*\r\r\n> \r\r\n"]
[112.604946, "o", "{ [data no"]
[112.605135, "o", "t shown]\r\n* Connection #0 to host athenz-zts-server left intact\r\n"]
[112.605451, "o", "\u0015\u0003\u0003\u0000\u0002\u0002P"]
[112.606388, "o", "\r\n"]
[112.607556, "o", "\u001b(B\u001b[m"]
[112.608391, "o", "\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[112.60864, "o", "[wfan@garm docker]$ \r\n\u001b]0;wfan@garm:~/athenz/docker\u0007[wfan@garm docker]$ # 'Thi"]
[112.608773, "o", "s is the end"]
[112.609056, "o", " of this demo. Bye~"]
[112.609209, "o", "'\r\n\u001b]0;wfan@garm:~/athenz/docker\u0007"]
[112.609287, "o", "[wfan@garm docker]$ exit\r\n"]
[112.609424, "o", "exit\r\n"]
